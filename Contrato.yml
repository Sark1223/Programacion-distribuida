openapi: 3.0.4
info:
  title: pharmacy
  description: API para administrar una farmacia
  version: 1.3.0
  contact:
    name: RND
    email: l22140765@queretaro.tecnm.mx
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html 

servers:
  - url: http//localhost:8080/api/v1
    description: Ambiente local
  - url: http//10.124.63.12:8080/api/v1
    description: Ambiente de pruebas
  - url: https//api.pharmacy.com/api/v1
    description: Servidor de produccion
    
tags:
  - name: pharmacys
    description: "Administra cada una de las sucursales"
  - name: products
    description: "Administra los productos y sus cantidades"
  - name: employes
    description: "Administra los clientes"
  - name: sales
    description: "Administrador de ventas"
    
paths:
  /pharmacys:
    get:
      summary: Obtener información de todas las farmacias
      description: obtiene todas las farmacias
      operationId: getPharmacys
      tags: 
        - pharmacys
      responses:
        '200':
          description: se obtuvo toda la informacion de las farmacias
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pharmacy'
              example:
                  - idPharmacy: 12345
                    name: "Simi Tech"
                    dirección: "Av. tecnologico #123"
                  - idPharmacy: 12345
                    name: "Simi Tech"
                    dirección: "Av. tecnologico #123"
    post:
      summary: crear nueva farmacia
      description: crear una nueva sucursal de nuestra cadena farmacias
      operationId: createPharmacy
      tags:
        - pharmacys
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pharmacy'
      responses:
        '201':
          description: Sucursal registrada correctamente
          
  /pharmacys/{idPharmacy}:
    get:
        summary: Obtiene una farmacia por su ID
        description: obtiene una farmacia en especifico
        operationId: getPharmacy
        tags: 
          - pharmacys
        parameters: 
        - name : idPharmacy
          in: path
          description: ID de la sucursal a actualizar
          required: true
          schema:
            type: integer
          example: 123
        responses:
          '200':
            description: Información de la farmacia obtenida
            content:
              application/json:
                example:
                    idPharmacy: 12345
                    name: "Simi Tech"
                    dirección: "Av. tecnologico #123"
    put:
      summary: Actualizar datos de una farmacia
      description: Actualizar los datos de una unica farmacia
      operationId: updatePharmacy
      tags:
        - pharmacys
      parameters: 
        - name : idPharmacy
          in: path
          description: ID de la sucursal a actualizar
          required: true
          schema:
            type: integer
          example: 123
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pharmacy'
      responses:
        '201':
          description: Sucursal actualizada correctamente
    
    patch:
      summary: Actualizar un dato de una farmacia
      description: Actualizar un unico dato de una unica farmacia
      operationId: patchPharmacy
      tags:
        - pharmacys
      parameters: 
        - name : idPharmacy
          in: path
          description: ID de la sucursal a actualizar
          required: true
          schema:
            type: integer
          example: 123
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pharmacyPatch'
            example: 
              name: "Farmacia la cruz"
              addres: "Calle La luz #13"
      responses:
        '201':
          description: datos de sucursal actualizado correctamente
          
    delete:
      summary: Eliminar sucursal
      description: Elimina una sucursal de farmacia
      operationId: deletePharmacy
      tags:
        - pharmacys
      parameters:
        - name: idPharmacy
          in: path
          description: ID de sucursal a eliminar
          required: true
          schema:
            type: integer
            format: int32
          example: 123
      responses:
        '200':
          description: sucursal eliminada 

  /products:
    get:
      summary: Obtener información de todos los productos
      description: obtiene todos los productos
      operationId: getProducts
      tags: 
        - products
      responses:
        '200':
          description: Se obtuvo la informacion de los productos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product'
              example:
                  - productId: 1
                    productTypeId: 12
                    name: "Paracetamol"
                    description: "Producto para aliviar el dolor y reducir la fiebre"
                    price: 200.50
                  - productId: 1
                    productTypeId: 12
                    name: "Paracetamol"
                    description: "Producto para aliviar el dolor y reducir la fiebre"
                    price: 200.50
    post:
      summary: crear nuevo producto
      description: crear una nuevo producto en la farmacia
      operationId: createtProduct
      tags:
        - products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product'
      responses:
        '201':
          description: Producto registrada correctamente
  /products/{productId}:      
    put:
      summary: Actualizar datos de una farmacia
      description: Actualizar los datos de una unica farmacia
      operationId: updateProduct
      tags:
        - products
      parameters: 
        - name : productId
          in: path
          description: ID del producto a actualizar
          required: true
          schema:
            type: integer
          example: 123
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product'
      responses:
        '201':
          description: Producto actualizado correctamente
    
    patch:
      summary: Actualizar un dato de una farmacia
      description: Actualizar un unico dato de una unica farmacia
      operationId: patchProduct
      tags:
        - products
      parameters: 
        - name : productId
          in: path
          description: ID de la sucursal a actualizar
          required: true
          schema:
            type: integer
          example: 123
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productPatch'
            example: 
              productId: 123
              price: 222.44
      responses:
        '201':
          description: datos de producto actualizados correctamente
          
    delete:
      summary: Eliminar producto
      description: Elimina una producto
      operationId: deleteProduct
      tags:
        - products
      parameters:
        - name: productId
          in: path
          description: ID de producto a eliminar
          required: true
          schema:
            type: integer
            format: int32
          example: 123
      responses:
        '200':
          description: producto eliminado          
          
  /employes:
    get:
      summary: Obetener todos los empleados
      description: obtiene todos los datos de los empleados
      operationId: getEmployes
      tags: 
        - employes
      responses:
        '200':
          description: se obtubieron toda la informacion de los empleados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/employe'
              example:
                  - idEmploye: 123
                    idPharmacy: 234
                    name: "Bartolomeo"
                    lastName: "Lee"
                    phone: "4424568932"
                    typeEmploye: "Cajero"
                  - idEmploye: 123
                    idPharmacy: 2
                    name: "Pepe"
                    lastName: "Lee"
                    phone: "4424568932"
                    typeEmploye: "Cajero"
    post:      
      summary: registrar empleado
      description: registrar los datos de un nuevo empleado
      operationId: createEmploye
      tags:
        - employes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/employe'
      responses:
        '201':
          description: Nuevo empleado registrado correctamente
  
  /employes/{idEmploye}:
    get:
      summary: Obetener empleado por su ID
      description: obtiene la informacion de un empleado en especifico
      operationId: getEmploye
      tags: 
        - employes
      parameters: 
        - name : idEmploye
          in: path
          description: ID de cliente a actualizar
          required: true
          schema:
            type: integer
          example: 123
      responses:
        '200':
          description: se obtubieron toda la informacion de los empleados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/employe'
              example:
                  idEmploye: 123
                  idPharmacy: 234
                  name: "Bartolomeo"
                  lastName: "Lee"
                  phone: "4424568932"
                  typeEmploye: "Cajero"
    put:
      summary: Actualizar datos de un empleado
      description: Actualizar todos los datos de un empleado
      operationId: updateEmploye
      tags:
        - employes
      parameters: 
        - name : idEmploye
          in: path
          description: ID de cliente a actualizar
          required: true
          schema:
            type: integer
          example: 123
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/employe'
      responses:
        '201':
          description: Datos de empleado actualizados
    
    patch:
      summary: Actualizar dato de empleado
      description: Actualizar un unico dato de un empleado
      operationId: patchEmploye
      tags:
        - employes
      parameters: 
        - name : idEmploye
          in: path
          description: ID de empleado a actualizar dato
          required: true
          schema:
            type: integer
          example: 123
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/employePatch'
            example: 
              name: "Vartolomeo"
              last_name: "Bell"
      responses:
        '200':
          description: Dato de empleado actualizado
          
    delete:
      summary: Eliminar empleado
      description: Elimina empleado
      operationId: deleteEmploye
      tags:
        - employes
      parameters:
        - name: idEmploye
          in: path
          description: ID de empleado a eliminar
          required: true
          schema:
            type: integer
            format: int32
          example: 123
      responses:
        '200':
          description: empleado eliminado exitosamente
    
  /sales:
    get:
      summary: Obtener información de todas las ventas de todas las farmacias
      description: obtiene todas las ventas de todas las farmacias
      operationId: getSales
      tags: 
        - sales
      responses:
        '200':
          description: Información de ventas obtenida correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sale'
              example:
                  - saleId: 123
                    saleDate: "31/12/2025 16:12:21"
                    subTotal: 22222.10
                    iva: 8.22
                    total: 22222.10
                    pharmacyId: 123
                    employeId: 123
                    sale-product:
                      - saleId: 123
                        productId: 123
                        quantity: 10
                      - saleId: 123
                        productId: 123
                        quantity: 5
                  - saleId: 123
                    saleDate: "31/12/2025 16:12:21"
                    subTotal: 22222.10
                    iva: 8.22
                    total: 22222.10
                    pharmacyId: 123
                    employeId: 123
                    sale-product:
                      - saleId: 123
                        productId: 123
                        quantity: 10
                  
    post:
      summary: crear nueva venta
      description: crear una nueva venta en una farmacia
      operationId: createSale
      tags:
        - sales
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sale'
      responses:
        '201':
          description: Venta registrada correctamente
          
  /sales/{idPharmacy}:
    get:
        summary: Obtiene las ventas por ID de farmacia
        description: obtine ventas por farmacia
        operationId: getSalesByPharmacy
        tags: 
          - sales
        parameters:
        - name: idPharmacy
          in: path
          description: ID de farmacia a obtener ventas
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
          example: 123
        responses:
          '200':
            description: Información de las ventas obtenida
            content:
              application/json:
                example:
                  - saleId: 123
                    saleDate: "31/12/2025 16:12:21"
                    subTotal: 22222.10
                    iva: 8.22
                    total: 22222.10
                    pharmacyId: 123
                    employeId: 123
                  - saleId: 123
                    saleDate: "31/12/2025 16:12:21"
                    subTotal: 22222.10
                    iva: 8.22
                    total: 22222.10
                    pharmacyId: 123
                    employeId: 123

  /sales/{saleId}:
    delete:
      summary: Eliminar venta por id
      description: Elimina una sucursal de farmacia
      operationId: deleteSale
      tags:
        - sales
      parameters:
        - name: saleId
          in: path
          description: ID de venta a eliminar
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
          example: 123
      responses:
        '200':
          description: venta eliminada exitosamente
          
          
components:
  schemas:
    pharmacy:
      type: object
      required: 
        - idPharmacy
        - name
        - address
      properties:
        idPharmacy:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          example: 123
        name:
          type: string
          minLength: 10
          maxLength: 30
          example: "Farmacia corazon"
        address:
          type: string
          minLength: 20
          maxLength: 50
          example: "Calle Rosales #65"
      
    pharmacyPatch:
      type: object
      properties:
        name:
          type: string
          minLength: 10
          maxLength: 30
          example: "Farmacia Cruz"
        address:
          type: string
          minLength: 20
          maxLength: 50
          example: "Calle La luz #13"
          
    employe:
      type: object
      required:
        - employeId
        - pharmacyId
        - name
        - lastName
        - phone
        - typeClient
      properties:
        idEmploye:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          example: 123
        idPharmacy:
          type: integer
          format: int32
          description: Llave foranea que referencia ID de la tabla pharmacy
          minimum: 1
          maximum: 2147483647
          example: 123
        name:
          type: string
          minLength: 3
          maxLength: 100
          example: "Bartolomeo"
        lastName:
          type: string
          minLength: 3
          maxLength: 100
          example: "Lee"
        phone:
          type: string
          minLength: 10
          maxLength: 20
          example: "4424568932"
        typeEmploye:
          description: Tipos de trabajadores de la tabla type_employe
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          example: 123
      
    employePatch:
      type: object
      properties:
        name:
          type: string
          minLength: 3
          maxLength: 100
          example: "Vartolomeo"
        lastName:
          type: string
          minLength: 3
          maxLength: 100
          example: "Bell"

    product:
      type: object
      required:
        - productId
        - pharmacyId
        - productTypeId
        - name
        - price
      properties:
        productId:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          example: 123
        productTypeId:
          type: integer
          format: int32
          description: Llave foranea que referencia ID del tipo de producto
          minimum: 1
          maximum: 2147483647
          example: 123
        name:
          type: string
          minLength: 3
          maxLength: 100
          example: "Paracetamol"
        description:
          type: string
          example: "Producto para aliviar el dolor y reducir la fiebre"
        price:
          type: number
          pattern: '^[0-9]{1,16}(?:\.[0-9]{1,2})?$'
          minLength: 1
          maxLength: 18
          example: 22222.10
      
    productPatch:
      type: object
      required:
        - productId
        - price
      properties:
        productId:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          example: 123
        price:
          type: number
          pattern: '^[0-9]{1,16}(?:\.[0-9]{1,2})?$'
          minLength: 1
          maxLength: 18
          example: 22222.10

    sale:
      type: object
      required: 
        - saleId
        - saleDate
        - subTotal
        - iva
        - total
        - employeId
      properties:
        saleId:
          type: integer
          format: int32
          minimum: 1
          maximum: 999
          example: 123
        saleDate:
          type: string
          pattern: '^(0[1-9]|[12][0-9]|3[01])/(0[1-9]|1[0-2])/\d{4} ([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$'
          minLength: 19
          maxLength: 30
          example: "31/12/2025 16:12:21"
        subTotal:
          type: number
          pattern: '^[0-9]{1,16}(?:\.[0-9]{1,2})?$'
          minLength: 1
          maxLength: 18
          example: 22222.10
        iva:
          type: number
          pattern: '^[0-9]{1,3}(?:\.[0-9]{1,2})?$'
          minLength: 1
          maxLength: 5
          example: 8.22
        total:
          type: number
          pattern: '^[0-9]{1,3}(?:\.[0-9]{1,2})?$'
          minLength: 1
          maxLength: 18
          example: 22222.10
        employeId:
          type: integer
          format: int32
          minimum: 1
          maximum: 999
          example: 123
        products:
          type: array
          items:
            $ref: '#/components/schemas/sale-product'
    
    sale-product:
      type: object
      required: 
        - saleId
        - productId
        - quantity
      properties:
        saleId:
          type: integer
          format: int32
          minimum: 1
          maximum: 999
          example: 123
        productId:
          type: integer
          format: int32
          minimum: 1
          maximum: 999
          example: 123
        quantity:
          type: integer
          format: int32
          minimum: 1
          maximum: 9999
          example: 10
